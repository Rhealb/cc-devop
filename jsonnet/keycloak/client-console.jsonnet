{
  // config variables
  _global_config:: {},
  id: "c1d14618-a906-42f3-866f-b41241611db5",
  clientId: "console",
  rootUrl: std.format("http://%s:%s/", [
    $._global_config.global.public_vip,
    $._global_config.node_ports.console,
  ]),
  adminUrl: std.format("http://%s:%s/", [
    $._global_config.global.public_vip,
    $._global_config.node_ports.console,
  ]),
  baseUrl: std.format("http://%s:%s/", [
    $._global_config.global.public_vip,
    $._global_config.node_ports.console,
  ]),
  surrogateAuthRequired: false,
  enabled: true,
  clientAuthenticatorType: "client-secret",
  secret: "786f3746-5a3f-4aaf-b4ee-46e56552e748",
  redirectUris: [std.format("http://%s:%s/*", [
    $._global_config.global.public_vip,
    $._global_config.node_ports.console,
  ])],
  webOrigins: ["*"],
  notBefore: 0,
  bearerOnly: false,
  consentRequired: false,
  standardFlowEnabled: true,
  implicitFlowEnabled: false,
  directAccessGrantsEnabled: true,
  serviceAccountsEnabled: false,
  publicClient: true,
  frontchannelLogout: false,
  protocol: "openid-connect",
  attributes: {
    "saml.assertion.signature": "false",
    "saml.force.post.binding": "false",
    "saml.multivalued.roles": "false",
    "saml.encrypt": "false",
    login_theme: "console-login",
    "saml.server.signature": "false",
    "saml.server.signature.keyinfo.ext": "false",
    "exclude.session.state.from.auth.response": "false",
    saml_force_name_id_format: "false",
    "saml.client.signature": "false",
    "tls.client.certificate.bound.access.tokens": "false",
    "saml.authnstatement": "false",
    "display.on.consent.screen": "false",
    "saml.onetimeuse.condition": "false",
  },
  authenticationFlowBindingOverrides: {},
  fullScopeAllowed: true,
  nodeReRegistrationTimeout: -1,
  defaultClientScopes: ["role_list", "profile", "email"],
  optionalClientScopes: ["address", "phone", "offline_access"],
}
